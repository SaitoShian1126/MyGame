//=============================================================================
//
// モデル処理 [model.cpp]
// Author : saito shian
//
//=============================================================================

//=============================================================================
// インクルードファイル
//=============================================================================
#include <assert.h>
#include "application.h"
#include "camera.h"
#include "input.h"
#include "main.h"
#include "objectX.h"
#include "model.h"
#include "shadow.h"
#include "renderer.h"
#include "meshfield.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CModel::CModel(int nPriority)
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CModel::~CModel()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CModel::Init()
{
	//objectxのposとrot
	D3DXVECTOR3 pos = CObjectX::GetPos();
	D3DXVECTOR3 size = CObjectX::GetSize();
	D3DXVECTOR3 rot = CObjectX::GetRot();

	//オブジェクトの初期化
	CObjectX::Init();

	//モデルのロード
	LoadModel("TEAPOT");

	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void CModel::Uninit()
{
	//CObjectXの終了処理
	CObjectX::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CModel::Update()
{
	//CObjectXの更新処理
	CObjectX::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CModel::Draw()
{
	//CObjectXの更新処理
	CObjectX::Draw();
}

//=============================================================================
// 生成処理
//=============================================================================
CModel * CModel::Create(const D3DXVECTOR3 pos, int nPriority)
{
	CModel *pModel = new CModel(nPriority);

	if (pModel != nullptr)
	{
		pModel->Init();
		pModel->SetPos(pos);
	}
	else
	{
		assert(false);
	}

	return pModel;
}